- title @view_model.title
= render @view_model.mock_vendor_partial

h1.h3.my0 = t('idv.titles.sessions')
= simple_form_for(idv_profile_form, url: verify_session_path,
    html: { autocomplete: 'off', method: :put, role: 'form' }) do |f|
  = f.error_notification
  .mb5
    .mb3.pb-tiny.border-bottom.border-teal = t('profile.index.full_name')
    = f.input :first_name, label: t('idv.form.first_name'), required: true
    = f.input :last_name, label: t('idv.form.last_name'), required: true
  .mb4
    .mb3.pb-tiny.border-bottom.border-teal = t('profile.index.address')
    = f.input :address1, label: t('idv.form.address1'), required: true
    = f.input :address2, label: t('idv.form.address2')
    = f.input :city, label: t('idv.form.city'), required: true
    .clearfix.mxn1
      .sm-col.sm-col-6.px1
        = f.input :state, collection: us_states_territories,
          label: t('idv.form.state'), required: true
      .sm-col.sm-col-4.px1
        / using :tel for mobile numeric keypad
        = f.input :zipcode, as: :tel,
          label: t('idv.form.zipcode'), required: true,
          pattern: '(\d{5}([\-]\d{4})?)',
          input_html: { class: 'zipcode', value: idv_profile_form.zipcode }
    .mb-tiny = t('idv.form.previous_address_html')
    = accordion('previous-address', t('idv.form.previous_address_add'),
      hide_header: true, hide_close_link: true) do
      .my2.pb-tiny.border-bottom.border-teal = t('profile.index.previous_address')
      = f.input :prev_address1, label: t('idv.form.address1')
      = f.input :prev_address2, label: t('idv.form.address2')
      = f.input :prev_city, label: t('idv.form.city')
      .clearfix.mxn1
        .sm-col.sm-col-6.px1
          = f.input :prev_state, collection: us_states_territories,
            label: t('idv.form.state')
        .sm-col.sm-col-4.px1
          / using :tel for mobile numeric keypad
          = f.input :prev_zipcode, as: :tel,
            label: t('idv.form.zipcode'),
            pattern: '(\d{5}([\-]\d{4})?)',
            input_html: { class: 'zipcode', value: idv_profile_form.prev_zipcode }
  .mb4
    .mt0.mb3.pb-tiny.border-bottom.border-teal = t('idv.form.personal_details')
    / using :tel for mobile numeric keypad
    = f.input :dob, as: :tel,
      label: t('idv.form.dob'), required: true,
      hint: t('idv.form.dob_hint'), hint_html: { id: 'dob-instructs', class: 'mb1' },
      pattern: '(0[1-9]|1[012])/(0[1-9]|1[0-9]|2[0-9]|3[01])/[0-9]{4}',
      input_html: { class: 'dob', value: idv_profile_form.dob, 'aria-describedby': 'dob-instructs' }
  .mb4
    / using :tel for mobile numeric keypad
    = f.input :ssn, as: :tel,
      label: t('idv.form.ssn_label_html', tooltip: tooltip(t('tooltips.ssn'))),
      required: true,
      pattern: '^\d{3}-?\d{2}-?\d{4}$',
      input_html: { class: 'ssn', value: idv_profile_form.ssn }
  .mt5
    button type='submit' class='btn btn-primary btn-wide' = t('forms.buttons.continue')
= render 'shared/cancel', link: verify_cancel_path
= render @view_model.modal_partial, view_model: @view_model

== javascript_include_tag 'misc/previous-address'
