- title t('titles.profile')


- btn_cls = 'btn btn-primary px2 py0 h6 regular sm-col-12 border-box center'
.mb3.h6.caps.red = t('headings.profile.main')
h2.heading = t('headings.profile.login_info')
.mb4
  .py2.border-bottom
    .clearfix.mxn1
      .sm-col.sm-col-5.px1 = 'Email address'
      .sm-col.sm-col-5.px1 = current_user.email
      .sm-col.sm-col-2.px1.sm-right-align
        = link_to 'Edit', edit_email_path, \
          class: btn_cls
  .mt3.mb1.h6.bold.caps
    | #{t('headings.profile.two_factor')} #{tooltip(t('tooltips.placeholder'))}
  .py2.border-top
    .clearfix.mxn1
      .sm-col.sm-col-5.px1 = 'Phone number'
      .sm-col.sm-col-5.px1 = current_user.phone
      .sm-col.sm-col-2.px1.sm-right-align
        = link_to 'Edit', edit_phone_path, \
          class: btn_cls
  .py2.border-top.border-bottom
    .clearfix.mxn1
      .sm-col.sm-col-10.px1 = 'Authentication app'
      .sm-col.sm-col-2.px1.sm-right-align
        - if current_user.totp_enabled?
          = button_to 'Disable', disable_totp_url, method: :delete, \
            class: btn_cls
        - else
          = link_to 'Enable', authenticator_start_url, \
            class: btn_cls

h2.heading
  | #{t('headings.profile.agencies')} #{tooltip(t('tooltips.placeholder'))}
- if current_user.active_identities.empty?
  p.mt2.mb4.italic You haven't logged into any agencies yet.
else
  - current_user.active_identities.each do |i|
    .py2.border-top
      .clearfix.mxn1
        .sm-col.sm-col-8.px1
          .h3.truncate = i.display_name
        .sm-col.sm-col-4.px1
          .h6.bold = 'Last login'
          .h5 = i.last_authenticated_at.to_s(:date_pretty)

h2.heading.heading-m0 = t('headings.profile.account_history')
  | #{t('headings.profile.account_history')} #{tooltip(t('tooltips.placeholder'))}
.mb4
  .py2.border-top
    .clearfix.mxn1
      .sm-col.sm-col-4.px1
        .h6.bold Event
      .sm-col.sm-col-4.px1
        .h6.bold Using
      .sm-col.sm-col-2.px1
        .h6.bold When
      .sm-col.sm-col-2.px1
        .h6.bold From
    - current_user.events.each do |i|
      .clearfix.mxn1
        .sm-col.sm-col-4.px1
          .h4.truncate = Event.event_type_to_s(i.event_type)
        .sm-col.sm-col-4.px1
          .h5 = i.user_agent
        .sm-col.sm-col-2.px1
          .h5 = i.created_at.to_formatted_s(:long)
        .sm-col.sm-col-2.px1
          .h5 = i.location
