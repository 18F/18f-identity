- title t('idv.titles.phone')

h1.h3.my0 = t('idv.titles.session.phone')

.py1.m0 = t('idv.messages.phone.description')

.mt2
  == t('idv.messages.phone.alert')

ul.py1.m0
  - t('idv.messages.phone.rules').each do |msg|
    li = msg

= simple_form_for(@idv_form, url: idv_phone_path,
    html: { autocomplete: 'off', method: :put, role: 'form', class: 'mt2' }) do |f|
  - if @idv_form.user_has_multiple_phone_numbers?
    - @idv.user.phone_configurations.each_with_index do |phone_configuration, index|
      span id="select_sms_#{index}"
        label.btn-border.col-12.mb2 for="two_factor_options_form_selection_#{option.type}"
          .radio
            = radio_button_tag('phone',
                  phone_configuration.phone,
                  @idv_form.phone == phone_configuration.phone)
            span.indicator.mt-tiny
            span.blue.bold.fs-20p = phone_configuration.formatted_phone
      span id="select_sms_#{index}"
        label.btn-border.col-12.mb2 for="two_factor_options_form_selection_#{option.type}"
          .radio
            = radio_button_tag('phone',
                  'other',
                  !@idv_form.phone_belongs_to_user?)
            span.indicator.mt-tiny
            span.blue.bold.fs-20p
              = f.label :other_phone, label: t('idv.form.other_phone'), class: 'bold'
              = f.input :other_phone, required: true, input_html: { class: 'us-phone sm-col-8' },
                        label: false, wrapper_html: { class: 'mr2' }

  - else
    = f.label :phone, label: t('idv.form.phone'), class: 'bold'
    = f.input :phone, required: true, input_html: { class: 'us-phone sm-col-8' }, label: false,
      wrapper_html: { class: 'mr2' }

  - if FeatureManagement.enable_usps_verification?
      = render 'verification_options'

  = f.button :submit, t('forms.buttons.continue'), class: 'btn-wide mt6 sm-col-6 col-12'

.mt2.pt1.border-top
  = link_to t('links.cancel'), idv_cancel_path, class: 'h5'
