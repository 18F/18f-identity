var frequency = <%= frequency %> * 1000;
var warning = <%= warning %> * 1000;
var start = <%= start %> * 1000;
var timeoutUrl = "<%= j timeout_url %>";
var warning_info = "<%= j render('session_timeout/warning', locals: { modal: modal }) %>";
var warningEl = document.getElementById('session-timeout-cntnr');
warningEl.insertAdjacentHTML('afterbegin', warning_info);
var initialTime = new Date();

var modal = new window.LoginGov.Modal({ el: '#session-timeout-msg' });
var keepaliveEl = document.getElementById('session-keepalive-btn');
var csrfEl = document.querySelector('meta[name="csrf-token"]')

var csrfToken = "";
if (csrfEl) {
  csrfToken = csrfEl.content
}

keepaliveEl.addEventListener('click', keepalive, false);

var pingTimeout;
var countdownInterval;

function notifyNewRelic(error, actionName) {
  if (typeof newrelic !== 'object') {
    return;
  }

  newrelic.addPageAction('Session Auto Logout', {
    duration_ms: new Date() - initialTime,
    action_name: actionName,
    error: error.message
  });
}

function ping() {
  var request = new XMLHttpRequest();
  request.open('GET', '/active', true);

  request.onload = function() {
    try {
      success(JSON.parse(request.responseText));
    } catch (error) {
      notifyNewRelic(error);
      window.LoginGov.autoLogout(timeoutUrl, 'ping');
    }
  };

  request.send();
  pingTimeout = setTimeout(ping, frequency)
}

function success(data) {
  var el = document.getElementById('session-timeout-msg'),
      cntnr = document.getElementById('session-timeout-cntnr');

  var time_remaining = data.remaining * 1000,
      time_timeout = new Date().getTime() + time_remaining,
      show_warning = time_remaining < warning

  if (!data.live) {
    window.LoginGov.autoLogout(timeoutUrl);
    return;
  }

  if (show_warning && !modal.shown) {
    modal.show();

    if(countdownInterval) {
      clearInterval(countdownInterval);
    }
    countdownInterval = window.LoginGov.countdownTimer(
      document.getElementById('countdown'), time_remaining, time_timeout
    );
  }

  if (!show_warning && modal.shown) modal.hide();

  if (time_remaining < frequency){
    time_remaining = time_remaining < 0 ? 0 : time_remaining
    ping_timeout = setTimeout(ping, time_remaining)
  }
}

function keepalive() {
  var request = new XMLHttpRequest();
  request.open('POST', '/sessions/keepalive', true);
  request.setRequestHeader('X-CSRF-Token', csrfToken);

  request.onload = function() {
    try {
      success(JSON.parse(request.responseText));
      modal.hide();
    } catch (error) {
      notifyNewRelic(error);
      window.LoginGov.autoLogout(timeoutUrl, 'keepalive');
    }
  };

  request.send();
}

setTimeout(ping, start);
